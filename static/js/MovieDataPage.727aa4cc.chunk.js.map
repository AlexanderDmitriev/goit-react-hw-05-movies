{"version":3,"file":"static/js/MovieDataPage.727aa4cc.chunk.js","mappings":"iQAGaA,EAAgBC,EAAAA,EAAAA,EAAH,2IAQbC,EAAiBD,EAAAA,EAAAA,GAAH,4IAQdE,EAASF,EAAAA,EAAAA,IAAH,yCAING,EAAaH,EAAAA,EAAAA,KAAH,6EAMVI,EAAmBJ,EAAAA,EAAAA,IAAH,0CAIhBK,EAAuBL,EAAAA,EAAAA,IAAH,0CAIpBM,GAAcN,EAAAA,EAAAA,GAAOO,EAAAA,GAAPP,CAAH,sL,6BC6BxB,EApDyB,WACvB,IAAOQ,GAAWC,EAAAA,EAAAA,MAAXD,QACP,GAAkCE,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAYA,OAVAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAoBN,GAASO,MAAK,SAAAC,GAChB,MAAZA,GACFJ,EAAaI,EAASC,WAKzB,CAACT,KAGF,gCACGG,GACC,iCACE,UAACP,EAAD,YACE,SAACF,EAAD,CACEgB,IAAG,6CAAwCP,EAAUQ,aACrDC,IAAKT,EAAUU,SAEjB,UAAChB,EAAD,YACE,0BACGM,EAAUU,MADb,KACsBV,EAAUW,aAAaC,MAAM,EAAG,GADtD,QAGA,UAACxB,EAAD,yBAA2BY,EAAUa,iBACrC,SAACvB,EAAD,wBACA,SAACF,EAAD,UAAgBY,EAAUc,YAC1B,SAACxB,EAAD,sBACA,SAACF,EAAD,UACGY,EAAUe,OAAOC,KAAI,SAAAC,GAAI,OACxB,SAACzB,EAAD,UAA2ByB,EAAKC,MAAfD,EAAKE,gBAK9B,SAAC/B,EAAD,sCACA,2BACE,SAACO,EAAD,CAAayB,GAAE,kBAAavB,EAAb,SAAf,mBACA,SAACF,EAAD,CAAayB,GAAE,kBAAavB,EAAb,YAAf,4BAIJ,SAAC,IAAD,KAEF,SAAC,KAAD,QC9CN,EAXuB,WACrB,OACE,4BACE,SAAC,EAAD,KAGA,SAAC,KAAD,S,mNCVOwB,EAAY,8BACZC,EAAe,mCCGtBC,EAAO,mCAAG,WAAMC,GAAN,gGAEWC,IAAAA,IAAUD,GAFrB,cAENnB,EAFM,yBAGLA,GAHK,gCAKZqB,EAAAA,GAAAA,MAAY,KAAMC,SALN,yDAAH,sDASAC,EAAa,SAAA/B,GACxB,IAAM2B,EAAG,UAAMH,EAAN,mBAA0BxB,EAA1B,4BAAqDyB,EAArD,0BACT,OAAOC,EAAQC,IAaJK,EAAkB,SAAAhC,GAC7B,IAAM2B,EAAG,UAAMH,EAAN,mBAA0BxB,EAA1B,oBAA6CyB,EAA7C,0BACT,OAAOC,EAAQC,IAGJM,EAAc,WACzB,IAAMN,EAAG,UAAMH,EAAN,sCAA6CC,GACtD,OAAOC,EAAQC,IAGJO,EAAY,SAACC,GACxB,IAAMR,EAAG,UAAMH,EAAN,kCAAyCC,EAAzC,kBAA+DU,EAA/D,8CACT,OAAOT,EAAQC,IAGJS,EAAU,SAACpC,GACtB,IAAM2B,EAAG,UAAMH,EAAN,mBAA0BxB,EAA1B,4BAAqDyB,EAArD,mBACT,OAAOC,EAAQC","sources":["components/MovieDetailsPage/MovieDetailsPageStyled.jsx","components/MovieDetailsPage/MovieDetailsPage.jsx","pages/MovieDataPage.jsx","services/basicData.js","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const MoviePageText = styled.p`\n  font-family: Raleway, sans-serif;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 1.2;\n  color: grey;\n`;\n\nexport const MoviePageTitle = styled.h3`\n  font-family: Raleway, sans-serif;\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 1.2;\n  color: black;\n`;\n\nexport const Poster = styled.img`\n  width: 256px;\n`;\n\nexport const GenresItem = styled.span`\n  :not(:last-child) {\n    padding-right: 8px;\n  }\n`;\n\nexport const MoviePageContent = styled.div`\n  display: flex;\n`;\n\nexport const MoviePageDescription = styled.div`\n  padding: 15px;\n`;\n\nexport const DetailsLink = styled(NavLink)`\ndisplay: block;\nfont-family: Raleway, sans-serif;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 1.2;\n  text-decoration: none;\n  color: grey;\n  `;","import React, { useState, useEffect } from 'react';\nimport * as API from '../../services/api';\nimport {\n  MoviePageText,\n  Poster,\n  MoviePageTitle,\n  GenresItem,\n  MoviePageContent,\n  MoviePageDescription,\n  DetailsLink\n} from './MovieDetailsPageStyled';\nimport {Spinner } from '../AppStyled';\nimport { Outlet, useParams } from \"react-router-dom\";\n\nconst MovieDetailsPage = () => {\n  const {movieId} = useParams();\n  const [movieInfo, setMovieInfo] = useState(null);\n\n  useEffect(() => {\n    API.getMovieDetails(movieId).then(response => {\n      if (response != null) {\n        setMovieInfo(response.data);\n      } else {\n        return;\n      }\n    });\n  }, [movieId]);\n\n  return (\n    <>\n      {movieInfo ? (\n        <>\n          <MoviePageContent>\n            <Poster\n              src={`https://image.tmdb.org/t/p/original${movieInfo.poster_path}`}\n              alt={movieInfo.title}\n            />\n            <MoviePageDescription>\n              <h2>\n                {movieInfo.title} ({movieInfo.release_date.slice(0, 4)})\n              </h2>\n              <MoviePageText>User score {movieInfo.vote_average}</MoviePageText>\n              <MoviePageTitle>Overview</MoviePageTitle>\n              <MoviePageText>{movieInfo.overview}</MoviePageText>\n              <MoviePageTitle>Genres</MoviePageTitle>\n              <MoviePageText>\n                {movieInfo.genres.map(film => (\n                  <GenresItem key={film.id}>{film.name}</GenresItem>\n                ))}\n              </MoviePageText>\n            </MoviePageDescription>\n          </MoviePageContent>\n          <MoviePageText>Additional information</MoviePageText>\n          <ul>\n            <DetailsLink to={`/movies/${movieId}/cast`}>Cast</DetailsLink>\n            <DetailsLink to={`/movies/${movieId}/reviews`}>Reviews</DetailsLink>\n          </ul>\n        </>\n      ) : (\n        <Spinner/>\n      )}\n      <Outlet/>\n    </>\n  );\n};\n\nexport default MovieDetailsPage;","//import Reviews  from '../components/Reviews';\nimport  MovieDetailsPage  from '../components/MovieDetailsPage';\n//import Cast from '../components/Cast'\nimport { Outlet } from 'react-router-dom';\n const MovieDataPage = () => {\n  return (\n    <div>\n      <MovieDetailsPage/>\n      {/* <Cast/> */}\n      {/* <Reviews/> */}\n      <Outlet/>\n    </div>\n  );\n};\n\nexport default MovieDataPage;\n","export const BASIC_URL = 'https://api.themoviedb.org/';\nexport const PERSONAL_KEY = '7a732289faaa021b300c67c80c35cad1'; //Ключ API (v3 auth)\n// Ключ доступа к API (v4 auth)\nexport const PERSONAL_KEY_V4 =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI3YTczMjI4OWZhYWEwMjFiMzAwYzY3YzgwYzM1Y2FkMSIsInN1YiI6IjYyNmU1NzcyMjQ1ZGJlMzM3ZjQzNzgwOSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.nGXh-5GwT2pl8pJ7su6oK_01uD4EgHcGzKoNAn_Ubao';\n\n/* Пример API-запроса\nhttps://api.themoviedb.org/3/movie/550?api_key=7a732289faaa021b300c67c80c35cad1 */\n\n//Документация\n//Our primary documentation is located at developers.themoviedb.org","import axios from 'axios';\nimport { toast } from 'react-toastify';\nimport { BASIC_URL, PERSONAL_KEY } from './basicData';\n\nconst getData = async url => {\n  try {\n    const response = await axios.get(url);\n    return response;\n  } catch (error) {\n    toast.error(error.message)\n  }\n};\n\nexport const getReviews = movieId => {\n  const url = `${BASIC_URL}3/movie/${movieId}/reviews?api_key=${PERSONAL_KEY}&language=en-US&page=1`;\n  return getData(url);\n  /* try {\n    const response = await axios.get(url);\n    \n    //Проверяем наличие пришедших данных\n    if (response.data.total_results > 0) {\n      return response;\n    }\n  } catch (error) {\n    alert(error);\n  } */\n};\n\nexport const getMovieDetails = movieId => {\n  const url = `${BASIC_URL}3/movie/${movieId}?api_key=${PERSONAL_KEY}&language=en-US&page=1`;\n  return getData(url);\n};\n\nexport const getTranding = () => {\n  const url = `${BASIC_URL}3/trending/all/day?api_key=${PERSONAL_KEY}`;\n  return getData(url);\n};\n\nexport const getMovies = (query) => {\n  const url = `${BASIC_URL}3/search/movie?api_key=${PERSONAL_KEY}&query=${query}&language=en-US&page=1&include_adult=false`;\n  return getData(url);\n};\n\nexport const getCast = (movieId) => {\n  const url = `${BASIC_URL}3/movie/${movieId}/credits?api_key=${PERSONAL_KEY}&language=en-US`;\n  return getData(url);\n};\n"],"names":["MoviePageText","styled","MoviePageTitle","Poster","GenresItem","MoviePageContent","MoviePageDescription","DetailsLink","NavLink","movieId","useParams","useState","movieInfo","setMovieInfo","useEffect","API","then","response","data","src","poster_path","alt","title","release_date","slice","vote_average","overview","genres","map","film","name","id","to","BASIC_URL","PERSONAL_KEY","getData","url","axios","toast","message","getReviews","getMovieDetails","getTranding","getMovies","query","getCast"],"sourceRoot":""}