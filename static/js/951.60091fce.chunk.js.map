{"version":3,"file":"static/js/951.60091fce.chunk.js","mappings":"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","sources":["components/GoBackButton/GoBackButton.jsx","components/MoviesPage/MoviesPageStyled.jsx","pages/MoviesPage.jsx","services/basicData.js","services/api.js"],"sourcesContent":["import React from 'react';\nimport styled from '@emotion/styled';\n\nconst GoBackButton = ({onClick}) => {\n  return (\n    <CustomButton type=\"click\" onClick={onClick}>\n      Go back\n    </CustomButton>\n  );\n};\n\nexport default GoBackButton;\n\nexport const CustomButton = styled.button`\ndisplay: block;\n  margin-bottom: ${props => props.theme.spacing(1)};\n  padding: ${props => props.theme.spacing(2)} ${props => props.theme.spacing(4)};\n  border: none;\n  outline: none;\n  border-radius: ${props => props.theme.spacing(1)};\n  cursor: pointer;\n  font-size: ${props => props.theme.spacing(3)};\n  font-weight: 700;\n  background-color: ${props => props.theme.colors.blue};\n  color: ${props => props.theme.colors.white};\n`;\n","import styled from '@emotion/styled';\nimport { Field } from 'formik';\nimport { NavLink } from 'react-router-dom';\nimport { CustomButton } from '../GoBackButton/GoBackButton';\n\nexport const SearchFormButton = styled(CustomButton)`\ndisplay: inline;\n  margin-left: ${props => props.theme.spacing(1)};\n`;\n\nexport const SearchFormInput = styled(Field)`\n  width: 50%;\n  font-size: ${props => props.theme.spacing(5)};\n  outline: none;\n  padding-left: ${props => props.theme.spacing(1)};\n  padding-right: ${props => props.theme.spacing(1)};\n  ::placeholder {\n    font-size: ${props => props.theme.spacing(3.5)};\n  }\n`;\n\nexport const FilmList = styled.li`\n  list-style: none;\n  :not(:last-child) {\n    ${props => props.theme.spacing(1)};\n  }\n`;\n\nexport const FilmLink = styled(NavLink)`\n  font-family: Raleway, sans-serif;\n  font-weight: 500;\n  font-size: ${props => props.theme.spacing(3.5)};\n  line-height: 1.2;\n  color: ${props => props.theme.colors.textColor};\n  text-decoration: none;\n  :hover,\n  :focus {\n    color: ${props => props.theme.colors.focusColor};\n  }\n`;\n","import React, { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Formik, Form } from 'formik';\nimport * as API from '../services/api';\nimport { Spinner } from '../components/AppStyled';\nimport {\n  SearchFormButton,\n  SearchFormInput,\n  FilmList,\n  FilmLink,\n} from '../components/MoviesPage/MoviesPageStyled';\n\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const location = useLocation();\n\n  //При начальном рендере ключевое слово для поиска пустая строка\n  const initialValues = { query: '' };\n\n  const handleSubmit = (values, { resetForm }) => {\n    setLoading(true);\n    API.getMovies(values.query).then(response => {\n      if (response) {\n        setMovies(response.data.results);\n        setLoading(false);\n      } else {\n        return;\n      }\n    });\n    resetForm();\n  };\n\n  return (\n    <>\n      <Formik initialValues={initialValues} onSubmit={handleSubmit}>\n        <Form>\n          <SearchFormInput\n            name=\"query\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search films\"\n          />\n          <SearchFormButton type=\"submit\">Search</SearchFormButton>\n        </Form>\n      </Formik>\n      {loading && <Spinner />}\n      {movies && (\n        <ul>\n          {movies.map(film => (\n            <FilmList key={film.id}>\n              <FilmLink\n                to={`/movies/${film.id}`}\n                state = {{ from: location }}\n              >\n                {film.title} ({film.release_date.slice(0, 4)})\n              </FilmLink>\n            </FilmList>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default MoviesPage;","export const BASIC_URL = 'https://api.themoviedb.org/';\nexport const PERSONAL_KEY = '7a732289faaa021b300c67c80c35cad1'; //Ключ API (v3 auth)\n// Ключ доступа к API (v4 auth)\nexport const PERSONAL_KEY_V4 =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI3YTczMjI4OWZhYWEwMjFiMzAwYzY3YzgwYzM1Y2FkMSIsInN1YiI6IjYyNmU1NzcyMjQ1ZGJlMzM3ZjQzNzgwOSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.nGXh-5GwT2pl8pJ7su6oK_01uD4EgHcGzKoNAn_Ubao';\n\n/* Пример API-запроса\nhttps://api.themoviedb.org/3/movie/550?api_key=7a732289faaa021b300c67c80c35cad1 */\n\n//Документация\n//Our primary documentation is located at developers.themoviedb.org","import axios from 'axios';\nimport  toast  from 'react-hot-toast';\nimport { BASIC_URL, PERSONAL_KEY } from './basicData';\n\nconst getData = async url => {\n  try {\n    const response = await axios.get(url);\n    \n    return response;\n  } catch (error) {\n    toast.error('Sorry, We don`t have this film`s information');\n  }\n};\n\nexport const getReviews = movieId => {\n  const url = `${BASIC_URL}3/movie/${movieId}/reviews?api_key=${PERSONAL_KEY}&language=en-US&page=1`;\n  return getData(url);\n};\n\nexport const getMovieDetails = movieId => {\n  const url = `${BASIC_URL}3/movie/${movieId}?api_key=${PERSONAL_KEY}&language=en-US&page=1`;\n  return getData(url);\n};\n\nexport const getTranding = () => {\n  const url = `${BASIC_URL}3/trending/all/day?api_key=${PERSONAL_KEY}`;\n  return getData(url);\n};\n\nexport const getMovies = (query) => {\n  const url = `${BASIC_URL}3/search/movie?api_key=${PERSONAL_KEY}&query=${query}&language=en-US&page=1&include_adult=false`;\n  return getData(url);\n};\n\nexport const getCast = (movieId) => {\n  const url = `${BASIC_URL}3/movie/${movieId}/credits?api_key=${PERSONAL_KEY}&language=en-US`;\n  return getData(url);\n};\n"],"names":["onClick","CustomButton","type","styled","props","theme","spacing","colors","blue","white","SearchFormButton","SearchFormInput","Field","FilmList","FilmLink","NavLink","textColor","focusColor","useState","movies","setMovies","loading","setLoading","location","useLocation","initialValues","query","onSubmit","values","resetForm","API","then","response","data","results","name","autoComplete","autoFocus","placeholder","map","film","to","id","state","from","title","release_date","slice","BASIC_URL","PERSONAL_KEY","getData","url","axios","toast","getReviews","movieId","getMovieDetails","getTranding","getMovies","getCast"],"sourceRoot":""}