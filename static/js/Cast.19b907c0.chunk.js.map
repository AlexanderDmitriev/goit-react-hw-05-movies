{"version":3,"file":"static/js/Cast.19b907c0.chunk.js","mappings":"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","sources":["components/Cast/CastStyled.jsx","components/Cast/CastItem.jsx","components/Cast/Cast.jsx","services/basicData.js","services/api.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const CastStyledItem = styled.li`\nwidth: 256px;\nlist-style: none;\npadding: 5px;\nborder-radius: 4px;\nbox-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n  0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n:not(:last-child) {\n  margin-bottom: 8px;\n}\n`;\n\nexport const CastText = styled.p`\nfont-family: Raleway, sans-serif;\n  font-weight: 500;\n  font-size: 12px;\n  line-height: 1.2;\n  color: grey;\n  `;\n\nexport const ActorsPhoto = styled.img`\nwidth: 128px;\n`;","import { HiOutlineEmojiHappy } from 'react-icons/hi';\nimport {CastStyledItem,CastText,ActorsPhoto} from './CastStyled';\n\nexport const CastItem = ({ photo, name, character }) => {\n  return (\n    <CastStyledItem>\n      {photo ? (\n        <ActorsPhoto\n          src={`https://image.tmdb.org/t/p/original${photo}`}\n          alt={name}\n          width=\"128\"\n        />\n      ) : (\n        <HiOutlineEmojiHappy size=\"128px\" />\n      )}\n      <CastText>{name}</CastText>\n      <CastText>{character}</CastText>\n    </CastStyledItem>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useParams } from \"react-router-dom\";\nimport * as API from '../../services/api';\nimport { CastItem } from './CastItem';\nimport {CastText} from './CastStyled';\n\nconst Cast = () => {\n  const [cast, setCast] = useState(null);\n  const {movieId} = useParams();\n\n  useEffect(() => {\n    API.getCast(movieId).then(response => {\n      if (response != null) {\n        setCast(response.data.cast);\n      } else {\n        return;\n      }\n    });\n  }, [movieId]);\n\n  return (\n    <>\n      {cast ? (\n        <ul>\n          {cast.map(actor => (\n            <CastItem\n              key={actor.id}\n              photo={actor.profile_path}\n              name={actor.name}\n              character={actor.character}\n            />\n          ))}\n        </ul>\n      ) : (\n        <CastText>Sorry, we don't have any cast information for this movie</CastText>\n      )}\n    </>\n  );\n};\n\nCastItem.propTypes = {\n  photo: PropTypes.string,\n  name: PropTypes.string,\n  character: PropTypes.string,\n};\n\nexport default Cast;","export const BASIC_URL = 'https://api.themoviedb.org/';\nexport const PERSONAL_KEY = '7a732289faaa021b300c67c80c35cad1'; //Ключ API (v3 auth)\n// Ключ доступа к API (v4 auth)\nexport const PERSONAL_KEY_V4 =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI3YTczMjI4OWZhYWEwMjFiMzAwYzY3YzgwYzM1Y2FkMSIsInN1YiI6IjYyNmU1NzcyMjQ1ZGJlMzM3ZjQzNzgwOSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.nGXh-5GwT2pl8pJ7su6oK_01uD4EgHcGzKoNAn_Ubao';\n\n/* Пример API-запроса\nhttps://api.themoviedb.org/3/movie/550?api_key=7a732289faaa021b300c67c80c35cad1 */\n\n//Документация\n//Our primary documentation is located at developers.themoviedb.org","import axios from 'axios';\nimport { toast } from 'react-toastify';\nimport { BASIC_URL, PERSONAL_KEY } from './basicData';\n\nconst getData = async url => {\n  try {\n    const response = await axios.get(url);\n    return response;\n  } catch (error) {\n    toast.error(error.message)\n  }\n};\n\nexport const getReviews = movieId => {\n  const url = `${BASIC_URL}3/movie/${movieId}/reviews?api_key=${PERSONAL_KEY}&language=en-US&page=1`;\n  return getData(url);\n  /* try {\n    const response = await axios.get(url);\n    \n    //Проверяем наличие пришедших данных\n    if (response.data.total_results > 0) {\n      return response;\n    }\n  } catch (error) {\n    alert(error);\n  } */\n};\n\nexport const getMovieDetails = movieId => {\n  const url = `${BASIC_URL}3/movie/${movieId}?api_key=${PERSONAL_KEY}&language=en-US&page=1`;\n  return getData(url);\n};\n\nexport const getTranding = () => {\n  const url = `${BASIC_URL}3/trending/all/day?api_key=${PERSONAL_KEY}`;\n  return getData(url);\n};\n\nexport const getMovies = (query) => {\n  const url = `${BASIC_URL}3/search/movie?api_key=${PERSONAL_KEY}&query=${query}&language=en-US&page=1&include_adult=false`;\n  return getData(url);\n};\n\nexport const getCast = (movieId) => {\n  const url = `${BASIC_URL}3/movie/${movieId}/credits?api_key=${PERSONAL_KEY}&language=en-US`;\n  return getData(url);\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["CastStyledItem","styled","CastText","ActorsPhoto","CastItem","photo","name","character","src","alt","width","size","propTypes","PropTypes","useState","cast","setCast","movieId","useParams","useEffect","API","then","response","data","map","actor","profile_path","id","BASIC_URL","PERSONAL_KEY","getData","url","axios","toast","message","getReviews","getMovieDetails","getTranding","getMovies","query","getCast","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}