{"version":3,"file":"static/js/609.b696049e.chunk.js","mappings":"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","sources":["components/MovieDetailsPage/MovieDetailsPageStyled.jsx","components/MovieDetailsPage/MovieDetailsPage.jsx","pages/MovieDataPage.jsx","services/basicData.js","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const MoviePageText = styled.p`\n  font-family: Raleway, sans-serif;\n  font-weight: 500;\n  font-size: ${props => props.theme.spacing(3)};\n  line-height: 1.2;\n  color: ${props => props.theme.colors.textColor};\n  margin-bottom: ${props => props.theme.spacing(2)};\n`;\n\nexport const MoviePageTitle = styled.h3`\n  font-family: Raleway, sans-serif;\n  font-weight: 700;\n  font-size: ${props => props.theme.spacing(4)};\n  line-height: 1.2;\n  color: ${props => props.theme.colors.titleColor};\n  margin-bottom: ${props => props.theme.spacing(1)};\n`;\n\nexport const Poster = styled.img`\n  width: ${props => props.theme.spacing(64)};\n`;\n\nexport const GenresItem = styled.span`\n  :not(:last-child) {\n    padding-right: ${props => props.theme.spacing(2)};\n  }\n`;\n\nexport const MoviePageContent = styled.div`\n  display: flex;\n  margin-bottom: ${props => props.theme.spacing(3)};\n`;\n\nexport const MoviePageDescription = styled.div`\n  padding: ${props => props.theme.spacing(4)};\n`;\n\nexport const DetailsLink = styled(NavLink)`\n  display: block;\n  font-family: Raleway, sans-serif;\n  font-weight: 500;\n  font-size: ${props => props.theme.spacing(4)};\n  line-height: 1.2;\n  text-decoration: none;\n  color: ${props => props.theme.colors.textColor};\n  :hover,\n  :focus {\n    color: ${props => props.theme.colors.focusColor};\n  }\n`;\n","import React, { useState, useEffect } from 'react';\nimport * as API from '../../services/api';\nimport {\n  MoviePageText,\n  Poster,\n  MoviePageTitle,\n  GenresItem,\n  MoviePageContent,\n  MoviePageDescription,\n  DetailsLink\n} from './MovieDetailsPageStyled';\nimport {Spinner } from '../AppStyled';\nimport { Outlet, useParams, useLocation } from \"react-router-dom\";\n\nconst MovieDetailsPage = () => {\n  const {movieId} = useParams();\n  const [movieInfo, setMovieInfo] = useState(null);\n  const location = useLocation();\n\n  useEffect(() => {\n    API.getMovieDetails(movieId).then(response => {\n      location.state={from:`${location.pathname}`};\n      if (response != null) {\n        setMovieInfo(response.data);\n      } else {\n        return;\n      }\n    });\n  }, [location, movieId]);\n\n  return (\n    <>\n      {movieInfo ? (\n        <>\n          <MoviePageContent>\n            <Poster\n              src={`https://image.tmdb.org/t/p/original${movieInfo.poster_path}`}\n              alt={movieInfo.title}\n            />\n            <MoviePageDescription>\n              <h2>\n                {movieInfo.title} ({movieInfo.release_date.slice(0, 4)})\n              </h2>\n              <MoviePageText>User score {movieInfo.vote_average}</MoviePageText>\n              <MoviePageTitle>Overview</MoviePageTitle>\n              <MoviePageText>{movieInfo.overview}</MoviePageText>\n              <MoviePageTitle>Genres</MoviePageTitle>\n              <MoviePageText>\n                {movieInfo.genres.map(film => (\n                  <GenresItem key={film.id}>{film.name}</GenresItem>\n                ))}\n              </MoviePageText>\n            </MoviePageDescription>\n          </MoviePageContent>\n          <MoviePageText>Additional information</MoviePageText>\n          <ul>\n            <DetailsLink to={`/movies/${movieId}/cast`}>Cast</DetailsLink>\n            <DetailsLink to={`/movies/${movieId}/reviews`}>Reviews</DetailsLink>\n          </ul>\n        </>\n      ) : (\n        <Spinner/>\n      )}\n      <Outlet/>\n    </>\n  );\n};\n\nexport default MovieDetailsPage;","import MovieDetailsPage from '../components/MovieDetailsPage';\n\nconst MovieDataPage = () => {\n  return (\n    <div>\n      <MovieDetailsPage />\n    </div>\n  );\n};\n\nexport default MovieDataPage;\n","export const BASIC_URL = 'https://api.themoviedb.org/';\nexport const PERSONAL_KEY = '7a732289faaa021b300c67c80c35cad1'; //Ключ API (v3 auth)\n// Ключ доступа к API (v4 auth)\nexport const PERSONAL_KEY_V4 =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI3YTczMjI4OWZhYWEwMjFiMzAwYzY3YzgwYzM1Y2FkMSIsInN1YiI6IjYyNmU1NzcyMjQ1ZGJlMzM3ZjQzNzgwOSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.nGXh-5GwT2pl8pJ7su6oK_01uD4EgHcGzKoNAn_Ubao';\n\n/* Пример API-запроса\nhttps://api.themoviedb.org/3/movie/550?api_key=7a732289faaa021b300c67c80c35cad1 */\n\n//Документация\n//Our primary documentation is located at developers.themoviedb.org","import axios from 'axios';\nimport { toast } from 'react-toastify';\nimport { BASIC_URL, PERSONAL_KEY } from './basicData';\n\nconst getData = async url => {\n  try {\n    const response = await axios.get(url);\n    return response;\n  } catch (error) {\n    toast.error(error.message)\n  }\n};\n\nexport const getReviews = movieId => {\n  const url = `${BASIC_URL}3/movie/${movieId}/reviews?api_key=${PERSONAL_KEY}&language=en-US&page=1`;\n  return getData(url);\n  /* try {\n    const response = await axios.get(url);\n    \n    //Проверяем наличие пришедших данных\n    if (response.data.total_results > 0) {\n      return response;\n    }\n  } catch (error) {\n    alert(error);\n  } */\n};\n\nexport const getMovieDetails = movieId => {\n  const url = `${BASIC_URL}3/movie/${movieId}?api_key=${PERSONAL_KEY}&language=en-US&page=1`;\n  return getData(url);\n};\n\nexport const getTranding = () => {\n  const url = `${BASIC_URL}3/trending/all/day?api_key=${PERSONAL_KEY}`;\n  return getData(url);\n};\n\nexport const getMovies = (query) => {\n  const url = `${BASIC_URL}3/search/movie?api_key=${PERSONAL_KEY}&query=${query}&language=en-US&page=1&include_adult=false`;\n  return getData(url);\n};\n\nexport const getCast = (movieId) => {\n  const url = `${BASIC_URL}3/movie/${movieId}/credits?api_key=${PERSONAL_KEY}&language=en-US`;\n  return getData(url);\n};\n"],"names":["MoviePageText","styled","props","theme","spacing","colors","textColor","MoviePageTitle","titleColor","Poster","GenresItem","MoviePageContent","MoviePageDescription","DetailsLink","NavLink","focusColor","movieId","useParams","useState","movieInfo","setMovieInfo","location","useLocation","useEffect","API","then","response","state","from","pathname","data","src","poster_path","alt","title","release_date","slice","vote_average","overview","genres","map","film","name","id","to","BASIC_URL","PERSONAL_KEY","getData","url","axios","toast","message","getReviews","getMovieDetails","getTranding","getMovies","query","getCast"],"sourceRoot":""}